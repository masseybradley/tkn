name: ci

on:
  push:
    tags:
      - 'v*'

jobs:
  kind:
    name: kind
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      # workaround for not being able to initialize pull credentials before the 'initialize containers' step and running all commands in our container:
      # https://github.community/t5/GitHub-Actions/Is-it-possible-to-login-to-dockerhub-to-initialize-containers-in/td-p/31880
      - name: github packages login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin

      - name: pull kind image
        run: docker pull docker.pkg.github.com/lazybit-ch/kind/kind:v0.7.0

      - name: run kind in dind container
        run: docker run --rm -d --privileged -v ${PWD}/release.yaml:/release.yaml -v /github/home/.docker/config.json:/root/.docker/config.json --name tekton docker.pkg.github.com/lazybit-ch/kind/kind:v0.7.0

      - name: wait for dind startup
        run: sleep 30

      - name: create tekton cluster
        run: docker exec -t tekton kind create cluster

      - name: download tekton-pipelines release
        run: docker exec -t tekton ash -c "curl -L https://github.com/tektoncd/pipeline/releases/download/v0.11.0-rc2/release.yaml | kubectl apply -f -"

      - name: create kind secrets
        run: docker exec -t tekton kubectl create secret generic regcred -n tekton-pipelines --from-file=/root/.docker/config.json
 
      - name: create release pipeline
        run: docker exec -t tekton kubectl apply -f /release.yaml

      - name: wait for pipelinerun to start
        run: sleep 30

      - name: wait for pipelinerun to complete
        run: docker exec -t tekton kubectl wait pod -n tekton-pipelines --for=condition=completed -l tekton.dev/pipelineRun=tkn-run --timeout="5m"
