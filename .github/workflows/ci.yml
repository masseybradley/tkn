name: ci

on:
  push:
    tags:
      - 'v*'

jobs:
  kind:
    name: kind
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      # workaround for: https://github.com/kubernetes-sigs/kind/issues/1350
      - name: install kind
        run: curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-$(uname)-amd64 && chmod 755 kind

      - name: install kubectl
        run: curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl && chmod 755 kubectl

      # workaround for not being able to initialize pull credentials before the 'initialize containers' step and running all commands in our container:
      # https://github.community/t5/GitHub-Actions/Is-it-possible-to-login-to-dockerhub-to-initialize-containers-in/td-p/31880
      - name: github packages login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin

      - name: create tekton cluster
        run: ./kind create cluster

      - name: download tekton-pipelines release
        run: curl -L https://github.com/tektoncd/pipeline/releases/download/v0.11.0-rc2/release.yaml | ./kubectl apply -f -

      - name: create kind secrets
        run: ./kubectl create secret generic regcred -n tekton-pipelines --from-file=/home/runner/.docker/config.json
 
      - name: create release pipeline
        run: ./kubectl apply -f release.yaml

      - name: wait for pipelinerun to start
        run: sleep 30

      - name: wait for pipelinerun to complete
        run: ./kubectl wait pod -n tekton-pipelines --for=condition=completed -l tekton.dev/pipelineRun=tkn-run --timeout="5m"
